package com.xiii.libertycity.lac.check.checks.player.exploit;

import com.google.common.base.Charsets;
import com.xiii.libertycity.lac.check.Category;
import com.xiii.libertycity.lac.check.Check;
import com.xiii.libertycity.lac.check.CheckInfo;
import com.xiii.libertycity.lac.data.PlayerData;
import io.github.retrooper.packetevents.event.impl.PacketPlayReceiveEvent;
import io.github.retrooper.packetevents.packettype.PacketType;
import io.github.retrooper.packetevents.packetwrappers.play.in.custompayload.WrappedPacketInCustomPayload;

@CheckInfo(name = "Exploit H", category = Category.PLAYER)
public class ExploitH extends Check {

    public void onPacket(PacketPlayReceiveEvent packet, PlayerData data) {
        if (packet.getPacketId() == PacketType.Play.Client.CUSTOM_PAYLOAD) {
            WrappedPacketInCustomPayload wrapper = new WrappedPacketInCustomPayload(packet.getNMSPacket());
            String payload = new String(wrapper.getData(), Charsets.UTF_8);

            String[] channels = payload.split("\0");

            if (wrapper.getChannelName().equals("REGISTER")) {
                if (data.getChannels().size() + channels.length > 124 || channels.length > 124) {
                    fail("Packet invalid", "p=" + wrapper.getChannelName());
                } else {
                    for (String channel : channels) {
                        data.getChannels().add(channel);
                    }
                }
            } else if (wrapper.getChannelName().equals("UNREGISTER")) {
                for (String channel : channels) {
                    data.getChannels().remove(channel);
                }
            }
        }
    }

}
