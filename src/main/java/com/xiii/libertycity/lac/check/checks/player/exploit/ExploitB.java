package com.xiii.libertycity.lac.check.checks.player.exploit;

import com.xiii.libertycity.lac.check.Category;
import com.xiii.libertycity.lac.check.Check;
import com.xiii.libertycity.lac.check.CheckInfo;
import io.github.retrooper.packetevents.event.impl.PacketPlayReceiveEvent;
import io.github.retrooper.packetevents.packettype.PacketType;
import io.github.retrooper.packetevents.packetwrappers.play.in.chat.WrappedPacketInChat;
import io.github.retrooper.packetevents.packetwrappers.play.in.clientcommand.WrappedPacketInClientCommand;
import io.github.retrooper.packetevents.packetwrappers.play.in.itemname.WrappedPacketInItemName;
import io.github.retrooper.packetevents.packetwrappers.play.in.tabcomplete.WrappedPacketInTabComplete;

@CheckInfo(name = "Exploit B", category = Category.PLAYER)
public class ExploitB extends Check {

    public void onPacket(PacketPlayReceiveEvent packet) {
        if (packet.getPacketId() == -111) {
            WrappedPacketInChat chat = new WrappedPacketInChat(packet.getNMSPacket());
            String message = chat.getMessage();
            boolean b = (String.valueOf(message).contains("${") || String.valueOf(message).contains("$["));
            if (b)
                fail("Exploit LogJ4", "Aucune (Raisons de sécurité");
            if (b)
                packet.setCancelled(true);
        }
        if (packet.getPacketId() == -110) {
            WrappedPacketInClientCommand cmd = new WrappedPacketInClientCommand(packet.getNMSPacket());
            String message = String.valueOf(cmd.getClientCommand());
            boolean b = (String.valueOf(message).contains("${") || String.valueOf(message).contains("$["));
            if (b)
                fail("Exploit LogJ4", "Aucune (Raisons de sécurité");
            if (b)
                packet.setCancelled(true);
        }
        if (packet.getPacketId() == -108) {
            WrappedPacketInTabComplete cmd = new WrappedPacketInTabComplete(packet.getNMSPacket());
            String message = String.valueOf(cmd.getText());
            boolean b = (String.valueOf(message).contains("${") || String.valueOf(message).contains("$["));
            if (b)
                fail("Exploit LogJ4", "Aucune (Raisons de sécurité");
            if (b)
                packet.setCancelled(true);
        }
        if (packet.getPacketId() == -72) {
            WrappedPacketInTabComplete cmd = new WrappedPacketInTabComplete(packet.getNMSPacket());
            String message = String.valueOf(cmd.getText());
            boolean b = (String.valueOf(message).contains("${") || String.valueOf(message).contains("$["));
            if (b)
                fail("Exploit LogJ4", "Aucune (Raisons de sécurité");
            if (b)
                packet.setCancelled(true);
        }
        if (packet.getPacketId() == PacketType.Play.Client.ITEM_NAME) {
            WrappedPacketInItemName name = new WrappedPacketInItemName(packet.getNMSPacket());
            String message = name.getItemName();
            boolean b = (String.valueOf(message).contains("${") || String.valueOf(message).contains("$["));
            if (b)
                fail("Exploit LogJ4", "Aucune (Raisons de sécurité");
            if (b)
                packet.setCancelled(true);
        }
    }
}
